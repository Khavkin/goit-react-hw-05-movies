{"version":3,"file":"static/js/221.a6c43017.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/moviedb-api.js","components/MessageBox/MessageBox.styled.js","components/MessageBox/MessageBox.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesListItem/MoviesListItem.styled.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/common.styled.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = 'cedb0d61b1d63f0d25850ca71581631f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrending() {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильмам `\n    );\n  }\n}\n\nexport async function getMovieInfo(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}?api_key=${API_KEY}&language=en-US`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result;\n    } else return {};\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильму ${movieID}  `\n    );\n  }\n}\nexport async function getMovieReview(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result?.results.map(({ author, content, id }) => ({\n        author,\n        content,\n        id,\n      }));\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения отзывов к фильму ${movieID}  `\n    );\n  }\n}\n\nexport async function getMovieCredits(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const resp = await responce.json();\n      //console.dir(resp);\n      const results = resp.cast.map(item => {\n        return {\n          id: item.id,\n          name: item.name,\n          original_name: item.original_name,\n          popularity: item.popularity,\n          profile_path: getImagePath(item.profile_path),\n          character: item.character,\n        };\n      });\n\n      return results;\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения актеров фильма ${movieID}  `\n    );\n  }\n}\n\nexport async function searchMovie(query = '') {\n  try {\n    if (query === '') return [];\n    const responce = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    //search/movie?api_key=cedb0d61b1d63f0d25850ca71581631f&language=en-US&query=stargate&page=1&include_adult=false\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} поиска фильма по запросу ${query}`\n    );\n  }\n}\n\nexport function getImagePath(image) {\n  return image ? BASE_IMAGE_URL + image : 'https://via.placeholder.com/300x400';\n}\n","import styled from '@emotion/styled';\n\nexport const MessageBoxContainer = styled.div`\n  width: 70%;\n  padding: 30px;\n  /* height: 200px; */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #536dfe;\n  color: #fff;\n  font-weight: 700;\n  font-size: 30px;\n  margin: 0 auto;\n`;\n","import { MessageBoxContainer } from './MessageBox.styled';\nimport PropTypes from 'prop-types';\n\nconst MessageBox = ({ children }) => {\n  return <MessageBoxContainer>{children}</MessageBoxContainer>;\n};\n\nMessageBox.propTypes = { children: PropTypes.string.isRequired };\n\nexport default MessageBox;\n","import styled from '@emotion/styled';\n\nexport const MoviesListWrapper = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const MoviesListItemCard = styled.li`\n  flex-basis: calc((100% - 4 * 10px) / 5);\n  background-color: #607d8b;\n`;\n\nexport const Title = styled.p`\n  text-decoration: none;\n  color: #fff;\n  padding: 5px;\n  text-align: center;\n  &:hover {\n    color: yellow;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  object-fit: cover;\n  height: 100%;\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\nexport const Thumb = styled.div`\n  width: 100%;\n  height: 400px;\n`;\n","import { Title } from 'components/MoviesList/MoviesList.styled';\nimport { Image, Thumb } from './MoviesListItem.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesListItem = ({ movieName, movieImage }) => {\n  return (\n    <>\n      <Thumb>\n        <Image src={movieImage} alt={`Image for ${movieName}`}></Image>\n      </Thumb>\n\n      <Title>{movieName}</Title>\n    </>\n  );\n};\n\nMoviesListItem.propTypes = {\n  movieName: PropTypes.string.isRequired,\n  movieImage: PropTypes.string.isRequired,\n};\nexport default MoviesListItem;\n","//import Movies from 'pages/Movies';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MoviesListItem from 'components/MoviesListItem';\nimport { MoviesListItemCard, MoviesListWrapper } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  //console.log('movieList', location);\n  return (\n    <MoviesListWrapper>\n      {movies &&\n        movies.map(item => (\n          <MoviesListItemCard key={item.id}>\n            <Link\n              to={`${location.pathname === '/' ? 'movies/' : ''}${item.id}`}\n              state={{ from: location }}\n            >\n              {/* {item.name} */}\n              <MoviesListItem\n                movieName={item.name}\n                movieImage={item.poster_path}\n              />\n            </Link>\n          </MoviesListItemCard>\n        ))}\n    </MoviesListWrapper>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 1280px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n\nexport const Section = styled.section`\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const HomeTitle = styled.h1`\n  color: #ffffff;\n  text-align: center;\n  font-size: 30px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n","import { Container, Section } from 'components/common.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useData } from 'Contexts/DataContext';\nimport { useStatus } from 'Contexts/StatusContext';\nimport { useEffect } from 'react';\nimport { getTrending } from '../../api/moviedb-api';\nimport { HomeTitle } from './Home.styled';\nimport MessageBox from 'components/MessageBox/MessageBox';\n\nconst Home = () => {\n  const { movies, setMovies } = useData();\n  const { status, setStatus, appStatus, error, setError } = useStatus();\n  // const location = useLocation();\n  // console.dir(location);\n  //const backLinkHref = location.state?.from ?? '/';\n\n  // useEffect(() => {\n  //   return () => {\n  //     setStatus(appStatus.IDLE);\n  //     console.log('Home unmount');\n  //   };\n  // }, []);\n\n  useEffect(() => {\n    if (movies) {\n      // console.log('movies from context');\n      setStatus(appStatus.RESOLVED);\n      return;\n    }\n    // console.log('get movies from site');\n    setStatus(appStatus.PENDING);\n    getTrending()\n      .then(results => {\n        setMovies(results);\n        setStatus(appStatus.RESOLVED);\n      })\n      .catch(error => {\n        setStatus(appStatus.REJECTED);\n        setMovies(null);\n        setError(error);\n      });\n  });\n\n  return (\n    <Section>\n      <Container>\n        <HomeTitle>Movies Week Trending</HomeTitle>\n        {status === appStatus.RESOLVED && movies?.length !== 0 && (\n          <MoviesList movies={movies}></MoviesList>\n        )}\n        {status === appStatus.REJECTED && (\n          <MessageBox>Error - {error.message}</MessageBox>\n        )}\n\n        {status === appStatus.RESOLVED && movies?.length === 0 && (\n          <MessageBox>Information not found</MessageBox>\n        )}\n      </Container>\n    </Section>\n  );\n};\nexport default Home;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","getTrending","fetch","responce","status","json","result","results","map","item","id","name","title","poster_path","getImagePath","message","getMovieInfo","movieID","getMovieReview","author","content","getMovieCredits","resp","cast","original_name","popularity","profile_path","character","searchMovie","query","image","MessageBoxContainer","styled","children","MoviesListWrapper","MoviesListItemCard","Title","Image","Thumb","movieName","movieImage","src","alt","movies","location","useLocation","to","pathname","state","from","Container","Section","HomeTitle","useData","setMovies","useStatus","setStatus","appStatus","setError","useEffect","RESOLVED","PENDING","catch","REJECTED","length","MoviesList","MessageBox"],"sourceRoot":""}