{"version":3,"file":"static/js/877.7d104fed.chunk.js","mappings":"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","sources":["api/moviedb-api.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = 'cedb0d61b1d63f0d25850ca71581631f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrending() {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return { id: item.id, name: item.name || item.title };\n      });\n    } else return [];\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getMovieInfo(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}?api_key=${API_KEY}&language=en-US`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result;\n    } else return {};\n  } catch (error) {\n    console.error(error.message);\n  }\n}\nexport async function getMovieReview(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result?.results.map(({ author, content, id }) => ({\n        author,\n        content,\n        id,\n      }));\n    } else return [];\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getMovieCredits(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const resp = await responce.json();\n      //console.dir(resp);\n      const results = resp.cast.map(item => {\n        return {\n          id: item.id,\n          name: item.name,\n          original_name: item.original_name,\n          popularity: item.popularity,\n          profile_path: item.profile_path,\n          character: item.character,\n        };\n      });\n\n      return results;\n    } else return [];\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function searchMovie(query = '') {\n  try {\n    if (query === '') return [];\n    const responce = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    //search/movie?api_key=cedb0d61b1d63f0d25850ca71581631f&language=en-US&query=stargate&page=1&include_adult=false\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return { id: item.id, name: item.name || item.title };\n      });\n    } else return [];\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport function getImagePath(image) {\n  return BASE_IMAGE_URL + image;\n}\n\n// export function getTrending() {\n//   return fetch(`${BASE_URL}trending/all/week?api_key=${API_KEY}`)\n//     .then(responce => responce.json())\n//     .then(responce => {\n//       return responce.results;\n//     })\n//     .then(results => {\n//       return results;\n//     })\n//     .catch(error => {\n//       console.error(error);\n//     });\n// }\n\n// getTrending().then(res => {\n//   console.dir(res);\n// });\n\n// getMovieInfo(594767).then(res => {\n//   console.dir(res);\n// });\n\n// getMovieCredits(594767).then(res => {\n//   console.dir(res);\n// });\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\n//https://api.themoviedb.org/3/search/movie?api_key=cedb0d61b1d63f0d25850ca71581631f&language=en-US&query=stargate&page=1&include_adult=false\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n","import { getMovieCredits } from 'api/moviedb-api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState(null);\n\n  console.dir(cast);\n\n  useEffect(() => {\n    getMovieCredits(id).then(response => {\n      console.dir(response);\n      setCast(response);\n    });\n  }, [id]);\n\n  return <div>It's cast</div>;\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","BASE_URL","getTrending","fetch","responce","status","json","result","results","map","item","id","name","title","console","error","message","getMovieInfo","movieID","getMovieReview","author","content","getMovieCredits","resp","cast","original_name","popularity","profile_path","character","searchMovie","query","getImagePath","image","useParams","useState","setCast","dir","useEffect","then","response","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}