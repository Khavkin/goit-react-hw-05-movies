{"version":3,"file":"static/js/818.8b66386f.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/moviedb-api.js","components/common.styled.js","components/InfoLine/InfoLine.styled.js","components/InfoLine/InfoLine.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieInfo/MovieInfo.styled.js","pages/MovieInfo/MovieInfo.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = 'cedb0d61b1d63f0d25850ca71581631f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrending() {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильмам `\n    );\n  }\n}\n\nexport async function getMovieInfo(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}?api_key=${API_KEY}&language=en-US`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result;\n    } else return {};\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильму ${movieID}  `\n    );\n  }\n}\nexport async function getMovieReview(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result?.results.map(({ author, content, id }) => ({\n        author,\n        content,\n        id,\n      }));\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения отзывов к фильму ${movieID}  `\n    );\n  }\n}\n\nexport async function getMovieCredits(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const resp = await responce.json();\n      //console.dir(resp);\n      const results = resp.cast.map(item => {\n        return {\n          id: item.id,\n          name: item.name,\n          original_name: item.original_name,\n          popularity: item.popularity,\n          profile_path: getImagePath(item.profile_path),\n          character: item.character,\n        };\n      });\n\n      return results;\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения актеров фильма ${movieID}  `\n    );\n  }\n}\n\nexport async function searchMovie(query = '') {\n  try {\n    if (query === '') return [];\n    const responce = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    //search/movie?api_key=cedb0d61b1d63f0d25850ca71581631f&language=en-US&query=stargate&page=1&include_adult=false\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} поиска фильма по запросу ${query}`\n    );\n  }\n}\n\nexport function getImagePath(image) {\n  return image ? BASE_IMAGE_URL + image : 'https://via.placeholder.com/300x400';\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 1280px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n\nexport const Section = styled.section`\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const InfoLineWrapper = styled.p`\n  display: flex;\n  gap: 5px;\n`;\n","import { InfoLineWrapper } from './InfoLine.styled';\nimport PropTypes from 'prop-types';\n\nconst InfoLine = ({ title, description }) => {\n  return (\n    <InfoLineWrapper>\n      <span>{title}</span>\n      <span>{description}</span>\n    </InfoLineWrapper>\n  );\n};\n\nInfoLine.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n};\nexport default InfoLine;\n","import styled from '@emotion/styled';\n\nexport const MovieCardWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  border-bottom: 1px solid #757575;\n  padding: 20px;\n`;\nexport const ImageWrapper = styled.div`\n  width: 300px;\n  height: 450px;\n  overflow: hidden;\n\n  border-radius: 10px;\n`;\n\nexport const Image = styled.img`\n  object-fit: cover;\n  height: 100%;\n`;\nexport const InfoWrapper = styled.div`\n  width: 600px;\n`;\n","import { getImagePath } from 'api/moviedb-api';\nimport InfoLine from 'components/InfoLine';\nimport {\n  Image,\n  ImageWrapper,\n  InfoWrapper,\n  MovieCardWrapper,\n} from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movieInfo }) => {\n  const createGenre = genres => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  const getReleaseYear = releaseDate => {\n    return releaseDate !== '' ? `(${new Date(releaseDate).getFullYear()})` : '';\n  };\n  return (\n    <MovieCardWrapper>\n      <ImageWrapper>\n        <Image\n          src={\n            movieInfo.poster_path\n              ? getImagePath(movieInfo.poster_path)\n              : 'https://via.placeholder.com/300x400'\n          }\n        ></Image>\n      </ImageWrapper>\n      <InfoWrapper>\n        <h1>\n          {movieInfo.title} {getReleaseYear(movieInfo.release_date)}\n        </h1>\n        <p>{movieInfo.tagline}</p>\n        <InfoLine title=\"Vote:\" description={movieInfo.vote_average} />\n        <InfoLine title=\"Popularity:\" description={movieInfo.popularity} />\n        <InfoLine title=\"Overview:\" description={movieInfo.overview} />\n        <InfoLine title=\"Genre:\" description={createGenre(movieInfo.genres)} />\n      </InfoWrapper>\n    </MovieCardWrapper>\n  );\n};\n\nMovieCard.propTypes = {\n  movieInfo: PropTypes.shape({\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    id: PropTypes.number.isRequired,\n    overview: PropTypes.string,\n    popularity: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    tagline: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const AdditionalInfo = styled.ul`\n  display: flex;\n  gap: 10px;\n  height: 30px;\n  font-weight: 700;\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n  color: #fff;\n  &.active,\n  :hover {\n    color: yellow;\n  }\n`;\nexport const AdditionalInfoContainer = styled.div`\n  border-bottom: 1px solid #757575;\n  margin-bottom: 20px;\n  padding: 20px;\n`;\nexport const BackLink = styled(Link)`\n  color: #fff;\n  font-weight: 700;\n  text-decoration: none;\n\n  &:hover {\n    color: yellow;\n  }\n`;\n","import { getMovieInfo } from 'api/moviedb-api';\nimport { Container, Section } from 'components/common.styled';\nimport MovieCard from 'components/MovieCard';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  AdditionalInfo,\n  AdditionalInfoContainer,\n  AdditionalInfoLink,\n  BackLink,\n} from './MovieInfo.styled';\n\nconst MovieInfo = () => {\n  const { moveID } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieInfo(moveID).then(responce => {\n      const {\n        genres,\n        id,\n        overview,\n        popularity,\n        poster_path,\n        release_date,\n        tagline,\n        title,\n        vote_average,\n      } = responce;\n\n      setMovieInfo({\n        genres,\n        id,\n        overview,\n        popularity,\n        poster_path,\n        release_date,\n        tagline,\n        title,\n        vote_average,\n      });\n    });\n  }, [moveID]);\n\n  return (\n    <Section>\n      <Container>\n        {/* Movie Info */}\n        <BackLink to={backLinkHref.current} state={{ from: location }}>\n          Go back\n        </BackLink>\n        {movieInfo && movieInfo.id && (\n          <MovieCard movieInfo={movieInfo}></MovieCard>\n        )}\n        <AdditionalInfoContainer>\n          <h3>Additional information</h3>\n          <AdditionalInfo>\n            <li>\n              <AdditionalInfoLink to=\"cast\">Cast</AdditionalInfoLink>\n            </li>\n            <li>\n              <AdditionalInfoLink to=\"review\">Review</AdditionalInfoLink>\n            </li>\n          </AdditionalInfo>\n        </AdditionalInfoContainer>\n\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </Section>\n  );\n};\n\nexport default MovieInfo;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","getTrending","fetch","responce","status","json","result","results","map","item","id","name","title","poster_path","getImagePath","message","getMovieInfo","movieID","getMovieReview","author","content","getMovieCredits","resp","cast","original_name","popularity","profile_path","character","searchMovie","query","image","Container","styled","Section","InfoLineWrapper","description","MovieCardWrapper","ImageWrapper","Image","InfoWrapper","genres","releaseDate","movieInfo","src","release_date","Date","getFullYear","tagline","vote_average","overview","genre","join","AdditionalInfo","AdditionalInfoLink","NavLink","AdditionalInfoContainer","BackLink","Link","moveID","useParams","useState","setMovieInfo","location","useLocation","backLinkHref","useRef","state","from","useEffect","to","current","Suspense","fallback"],"sourceRoot":""}